@model ABC_Retail.ViewModels.ProductViewModel

@{
	ViewData["Title"] = "Create Product";
}

<h1>Create New Product</h1>

<div id="createProductFormContainer">
	@await Html.PartialAsync("_CreateProductForm", Model)
</div>

@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
	<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
	<script>
		$(document).ready(function() {
			$('#createProductFormContainer').on('submit', '#createProductForm', function(event) {
				event.preventDefault(); // Prevent the default form submission

				// Show confirmation popup
				Swal.fire({
					title: 'Confirm Creation',
					text: 'Are you sure you want to create this product?',
					icon: 'question',
					showCancelButton: true,
					confirmButtonText: 'Yes, create it!',
					cancelButtonText: 'Cancel'
				}).then((result) => {
					if (result.isConfirmed) {
						// Show loading popup
						Swal.fire({
							title: 'Creating Product',
							text: 'Please wait...',
							icon: 'info',
							allowOutsideClick: false,
							didOpen: () => {
								Swal.showLoading();
							}
						});

						// Append /CreatingProduct... to the URL
						const originalUrl = window.location.href;
						window.history.replaceState({}, '', window.location.pathname + '/CreatingProduct');

						// Submit the form via AJAX
						var formData = new FormData($('#createProductForm')[0]);
						$.ajax({
							url: '@Url.Action("Create", "Product")',
							type: 'POST',
							data: formData,
							processData: false,
							contentType: false,
							success: function(data) {
								if (data.success) {
									// Show success popup
									Swal.fire({
										title: 'Product Created',
										text: data.message,
										icon: 'success'
									}).then((result) => {
										if (result.isConfirmed) {
											window.history.replaceState({}, '', originalUrl);
											window.location.href = '@Url.Action("Index", "Product")';
										}
									});
								} else {
									Swal.fire({
										title: 'Error',
										text: data.message,
										icon: 'error'
									}).then(result => {
										if (result.isConfirmed) {
											// Revert URL back to original before reloading
											window.history.replaceState({}, '', originalUrl);
											// Replace the form with the returned HTML to show validation errors
											$('#createProductFormContainer').html(data);
										}
									});
								}
							},
							error: function() {
								// Handle errors
								Swal.fire({
									title: 'Error',
									text: 'An error occurred while creating the product.',
									icon: 'error'
								}).then(result => {
									if (result.isConfirmed) {
										// Revert URL back to original before reloading
										window.history.replaceState({}, '', originalUrl);
									}
								});
							}
						});
					}
				});
			});
		});
	</script>
}